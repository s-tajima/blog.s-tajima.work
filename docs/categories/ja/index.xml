<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ja on s_tajima::TechBlog</title>
    <link>https://blog.s-tajima.work/categories/ja/</link>
    <description>Recent content in Ja on s_tajima::TechBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-JP</language>
    <lastBuildDate>Sat, 09 Feb 2019 22:30:00 +0900</lastBuildDate>
    
	<atom:link href="https://blog.s-tajima.work/categories/ja/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>セキュリティ診断で確認する項目</title>
      <link>https://blog.s-tajima.work/post/2019/security-assessment/</link>
      <pubDate>Sat, 09 Feb 2019 22:30:00 +0900</pubDate>
      
      <guid>https://blog.s-tajima.work/post/2019/security-assessment/</guid>
      <description>安心してサービスを運用するために、セキュリティ関連の設定や運用に問題がないかをチェックしておくのは重要です。 最近、そんなチェックする機会が増</description>
    </item>
    
    <item>
      <title>CODE BLUE 2018 Smart Contract Hacking Challenge WriteUp</title>
      <link>https://blog.s-tajima.work/post/2018/smart-contract-write-up/</link>
      <pubDate>Thu, 08 Nov 2018 12:00:00 +0900</pubDate>
      
      <guid>https://blog.s-tajima.work/post/2018/smart-contract-write-up/</guid>
      <description>2018/10/29 ~ 2018/11/02 に開催された CODE BLUE 2018 に参加し、 そこで行われていた PolySwarm の Smart Contract Hacking Challenge に挑戦してみました。 結果、1位で解くことができたのでそのWriteUpを公開</description>
    </item>
    
    <item>
      <title>shell2httpでAWS FargateやSSHレスの運用を少しだけ楽にする</title>
      <link>https://blog.s-tajima.work/post/2018/shell2http-on-fargate/</link>
      <pubDate>Mon, 22 Oct 2018 23:30:00 +0900</pubDate>
      
      <guid>https://blog.s-tajima.work/post/2018/shell2http-on-fargate/</guid>
      <description>はじめに AWS Fargate、便利ですよね。 EC2のコンテナインスタンスの管理が不要になり、コンテナの管理だけを気にすればよくなるため、設定の管</description>
    </item>
    
    <item>
      <title>ptraceを使ってプロセスの *現在の* 環境変数を参照する</title>
      <link>https://blog.s-tajima.work/post/2018/intro-peke-envs/</link>
      <pubDate>Mon, 15 Oct 2018 12:00:00 +0900</pubDate>
      
      <guid>https://blog.s-tajima.work/post/2018/intro-peke-envs/</guid>
      <description>ptraceを使って特定のプロセスの 現在の 環境変数を参照するためのプログラムを書いてみたのでその紹介です。 背景 Linuxを使っていると、プロ</description>
    </item>
    
    <item>
      <title>CVE-2018-17082によるXSSに関する見解</title>
      <link>https://blog.s-tajima.work/post/2018/cve-2018-17082/</link>
      <pubDate>Fri, 21 Sep 2018 18:30:25 +0900</pubDate>
      
      <guid>https://blog.s-tajima.work/post/2018/cve-2018-17082/</guid>
      <description>2018/10/13 追記 徳丸さん(@ockeghem) により、mod_cache利用時にXSSが成立してしまうケースが確認されました。 これにより環境によっては</description>
    </item>
    
    <item>
      <title>CentOSでslapdのauditlogを有効にする</title>
      <link>https://blog.s-tajima.work/post/2017/use-slapd-with-auditlog/</link>
      <pubDate>Thu, 20 Jul 2017 12:00:00 +0900</pubDate>
      
      <guid>https://blog.s-tajima.work/post/2017/use-slapd-with-auditlog/</guid>
      <description>概要 CentOSにてRPM(openldap-servers)でインストールしたslapdを使う際、auditlogの設定でハマったのでその</description>
    </item>
    
    <item>
      <title>AWSのAMIをゼロから作る autoknitterの紹介</title>
      <link>https://blog.s-tajima.work/post/2017/intro-autoknitter/</link>
      <pubDate>Thu, 11 May 2017 23:21:25 +0900</pubDate>
      
      <guid>https://blog.s-tajima.work/post/2017/intro-autoknitter/</guid>
      <description>TL; DR AWSでは自分で作成したAMIを使いたい。 PackerのEBS Surrogate Builderを使うと便利にAMIを作成できる。 EBS Surrogate Builderをより</description>
    </item>
    
    <item>
      <title>tsharkを用いたネットワークトラフィックの内訳の調査</title>
      <link>https://blog.s-tajima.work/post/2017/intro-tshark/</link>
      <pubDate>Wed, 10 May 2017 19:11:08 +0900</pubDate>
      
      <guid>https://blog.s-tajima.work/post/2017/intro-tshark/</guid>
      <description>下の図は、とあるサーバのネットワークトラフィックのモニタリングのグラフです。 具体的な数値はマスクしてありますが、数週間かけてじわじわとトラフ</description>
    </item>
    
    <item>
      <title>hello</title>
      <link>https://blog.s-tajima.work/post/2017/hello/</link>
      <pubDate>Fri, 05 May 2017 23:03:50 +0900</pubDate>
      
      <guid>https://blog.s-tajima.work/post/2017/hello/</guid>
      <description>Hatena Blogから移転してきました。 本ブログは ホスティングはGitHub Pages コンテンツ作成はHugo CDN, TLS配信はCloudflare を利用して運</description>
    </item>
    
    <item>
      <title>GitHubのPull Requestへのレビュアーアサインを自動化するツール「github-dice」の紹介</title>
      <link>https://blog.s-tajima.work/post/2016/intro-github-dice/</link>
      <pubDate>Mon, 19 Dec 2016 00:00:00 +0900</pubDate>
      
      <guid>https://blog.s-tajima.work/post/2016/intro-github-dice/</guid>
      <description>ブログ移転のテストです。 元の記事はこちら。 http://s-tajima.hateblo.jp/entry/2016/12/19/131319 こんにちは、今回はGitHubのPull Requestへのアサインを自動化するツール 「githu</description>
    </item>
    
  </channel>
</rss>